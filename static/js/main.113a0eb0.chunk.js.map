{"version":3,"sources":["api.ts","components/Cart/Cart.tsx","components/CartList/CartList.tsx","components/MenuSideBar/index.tsx","components/Product/Product.tsx","components/ProductList/ProductList.tsx","firebase/firebase.ts","components/Login/Login.tsx","App.tsx","reportWebVitals.ts","state/models.ts","state/count.ts","state/task.ts","state/task-detail.ts","state/product.ts","state/cart.ts","state/order.ts","state/store.ts","index.tsx"],"names":["postData","a","url","data","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","response","json","getData","Cart","props","cartDisplay","cartInfo","id","product_id","product","name","price","image_link","onDeleteCart","dispatch","useSelector","state","cart","useDispatch","useState","priceCart","setPriceCart","quantity","setQuantity","useEffect","updateQuantity","event","userId","parse","sessionStorage","getItem","currentTarget","process","idLogin","then","result","fetchCartList","check","setCheck","ListItem","role","undefined","dense","button","ListItemIcon","Checkbox","onChange","edge","tabIndex","disableRipple","className","checked","height","width","src","ListItemText","primary","onClick","style","background","borderRadius","fontWeight","margin","hidden","ListItemSecondaryAction","IconButton","aria-label","useStyles","makeStyles","theme","createStyles","root","backgroundColor","palette","paper","CartList","classes","cartList","productList","cartListAfter","forEach","push","deleteData","affectedRows","alert","element","document","getElementsByClassName","elementCheckbox","getElementsByTagName","elementQuantity","elementProductId","total","cartOrderDetail","orderId","uuidv4","length","i","Number","innerHTML","cartDetailTmp","order_id","console","log","List","map","item","Button","dataCheckout","order","date_payment","total_price","user_id","orderDetail","setOrderCheckout","list","fullList","grow","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","shape","alpha","common","white","marginLeft","buttonSearch","color","searchIcon","padding","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","MenuSideBar","React","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","left","setState","toggleDrawer","anchor","open","type","key","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","mobileMenuId","renderMobileMenu","Badge","badgeContent","aria-controls","aria-haspopup","searchInput","setSearchInput","onSearch","fetchProductList","totalCart","userName","image","AppBar","Toolbar","Drawer","clsx","onKeyDown","text","index","Divider","Typography","variant","noWrap","textDecoration","href","InputBase","value","target","placeholder","input","inputProps","size","Avatar","alt","removeItem","window","location","reload","border","card","cursor","media","paddingTop","expand","transform","duration","shortest","expandOpen","avatar","red","Product","description","createDate","onAddToCart","Card","classNames","CardHeader","action","subheader","CardMedia","CardContent","component","CardActions","textAlign","ProductList","history","useHistory","productId","Grid","container","sm","xs","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","schema","yup","required","password","Login","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","messageLogin","setMessageLogin","errorUserName","message","errorPasswrod","responseFacebook","facebookId","picture","setItem","onSubmit","FormGroup","TextField","error","label","helperText","marginTop","fields","callback","App","taskList2","setTaskList2","taskDeleteId","taskDetail","taskId","deleteId","setDeleteId","tmp","firestore","collection","get","docs","task","fetchTaskList","session","path","overflow","top","zIndex","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","models","count","createModel","multiplierName","reducers","increment","payload","effects","incrementAsync","setTaskAsync","setTaskDetail","setTaskDetailAsync","setProductAsync","setCartAsync","setOrderCheckoutAsync","or","setOrderCheckoutF","store","init","plugins","loadingPlugin","updatedPlugin","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.113a0eb0.chunk.js","sourcesContent":["export async function postData(url = \"\", data = {}) {\r\n  // Default options are marked with *\r\n  const response = await fetch(url, {\r\n    method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n    mode: \"cors\", // no-cors, *cors, same-origin\r\n    cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n    credentials: \"same-origin\", // include, *same-origin, omit\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      // 'Content-Type': 'application/x-www-form-urlencoded',\r\n    },\r\n    redirect: \"follow\", // manual, *follow, error\r\n    referrerPolicy: \"no-referrer\", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n    body: JSON.stringify(data), // body data type must match \"Content-Type\" header\r\n  });\r\n  return response.json(); // parses JSON response into native JavaScript objects\r\n}\r\n\r\n// Default options are marked with *\r\nexport async function getData(url = \"\") {\r\n  const response = await fetch(url, {\r\n    method: \"GET\", // *GET, POST, PUT, DELETE, etc.\r\n    mode: \"cors\", // no-cors, *cors, same-origin\r\n    cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n    credentials: \"same-origin\", // include, *same-origin, omit\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      // 'Content-Type': 'application/x-www-form-urlencoded',\r\n    },\r\n    redirect: \"follow\", // manual, *follow, error\r\n    referrerPolicy: \"no-referrer\", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n  });\r\n  return response.json(); // parses JSON response into native JavaScript objects\r\n}\r\n\r\nexport async function deleteData(url = \"\") {\r\n  // Default options are marked with *\r\n  const response = await fetch(url, {\r\n    method: \"DELETE\", // *GET, POST, PUT, DELETE, etc.\r\n    mode: \"cors\", // no-cors, *cors, same-origin\r\n    cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n    credentials: \"same-origin\", // include, *same-origin, omit\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      // 'Content-Type': 'application/x-www-form-urlencoded',\r\n    },\r\n    redirect: \"follow\", // manual, *follow, error\r\n    referrerPolicy: \"no-referrer\", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n  });\r\n  return response.json(); // parses JSON response into native JavaScript objects\r\n}\r\n\r\nexport async function updateData(url = \"\", data = {}) {\r\n  // Default options are marked with *\r\n  const response = await fetch(url, {\r\n    method: \"PUT\", // *GET, POST, PUT, DELETE, etc.\r\n    mode: \"cors\", // no-cors, *cors, same-origin\r\n    cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n    credentials: \"same-origin\", // include, *same-origin, omit\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      // 'Content-Type': 'application/x-www-form-urlencoded',\r\n    },\r\n    redirect: \"follow\", // manual, *follow, error\r\n    referrerPolicy: \"no-referrer\", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n    body: JSON.stringify(data), // body data type must match \"Content-Type\" header\r\n  });\r\n  return response.json(); // parses JSON response into native JavaScript objects\r\n}\r\n","import React, { useState, useEffect, ChangeEvent } from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CommentIcon from \"@material-ui/icons/Comment\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { Image } from \"rebass\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Dispatch, RootState } from \"../../state/store\";\r\nimport { CartDisplay, CartInfo } from \"../../types/task\";\r\nimport { getData, postData, updateData } from \"../../api\";\r\n\r\ntype CartProps = {\r\n  cartDisplay: CartDisplay;\r\n  onDeleteCart: (event: React.MouseEvent<HTMLElement>) => void;\r\n  // onIncreamentQuantity: (event: React.MouseEvent<HTMLElement>) => void;\r\n};\r\n\r\nexport const Cart = (props: CartProps) => {\r\n  const {\r\n    cartDisplay: {\r\n      cartInfo: { id, product_id },\r\n      product: { name, price, image_link },\r\n    },\r\n    onDeleteCart,\r\n    // onIncreamentQuantity,\r\n    // quantity,\r\n  } = props;\r\n\r\n  const cartList = useSelector((state: RootState) => state.cart) as CartInfo[];\r\n  const dispatch = useDispatch<Dispatch>();\r\n\r\n  const [priceCart, setPriceCart] = useState<number>(price);\r\n  const [quantity, setQuantity] = useState<number>(1);\r\n\r\n  // const onDegreamentQuantity = () => {\r\n  //   if (quantity > 1) {\r\n  //     setQuantity(quantity - 1);\r\n  //   }\r\n  // };\r\n\r\n  useEffect(() => {\r\n    setPriceCart(price * quantity);\r\n  }, [price, quantity]);\r\n\r\n  const updateQuantity = (event: React.MouseEvent<HTMLElement>) => {\r\n    const session = JSON.parse(sessionStorage.getItem(\"userName\") as string);\r\n    const { userId } = session;\r\n    if (event.currentTarget.id === \"add\") {\r\n      setQuantity(quantity + 1);\r\n      postData(`${process.env.REACT_APP_SERVER_PORT}/cart`, { idLogin: userId }).then(\r\n        (result) => {\r\n          dispatch.cart.fetchCartList(result);\r\n        }\r\n      );\r\n    } else if (quantity > 1) {\r\n      setQuantity(quantity - 1);\r\n      postData(`${process.env.REACT_APP_SERVER_PORT}/cart`, { idLogin: userId }).then(\r\n        (result) => {\r\n          dispatch.cart.fetchCartList(result);\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const [check, setCheck] = useState(true);\r\n\r\n  const onchage = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setCheck(!check);\r\n    getData(`${process.env.REACT_APP_SERVER_PORT}/cart`).then((result) => {\r\n      dispatch.cart.fetchCartList(result);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ListItem role={undefined} dense button>\r\n      <ListItemIcon>\r\n        <Checkbox\r\n          onChange={onchage}\r\n          edge=\"start\"\r\n          tabIndex={-1}\r\n          disableRipple\r\n          className=\"checkbox\"\r\n          checked={check}\r\n        />\r\n      </ListItemIcon>\r\n      <Image height=\"150px\" width=\"200px\" src={image_link} />\r\n\r\n      <ListItemText primary={name} />\r\n\r\n      <span className=\"price\" id={id as unknown as string}>\r\n        {priceCart}\r\n      </span>\r\n      <div>\r\n        <button\r\n          id=\"add\"\r\n          onClick={updateQuantity}\r\n          style={{\r\n            background: \"grey\",\r\n            width: \"30px\",\r\n            borderRadius: \"5px\",\r\n            fontWeight: \"bold\",\r\n          }}\r\n        >\r\n          +\r\n        </button>\r\n        <span style={{ margin: \" 0 5px\" }} className=\"quantity\">\r\n          {quantity}\r\n        </span>\r\n        <span hidden className=\"productId\">\r\n          {product_id}\r\n        </span>\r\n        <button\r\n          id=\"mod\"\r\n          onClick={updateQuantity}\r\n          style={{\r\n            background: \"grey\",\r\n            width: \"30px\",\r\n            borderRadius: \"5px\",\r\n            fontWeight: \"bold\",\r\n          }}\r\n        >\r\n          -\r\n        </button>\r\n      </div>\r\n      <ListItemSecondaryAction>\r\n        <IconButton\r\n          id={id as unknown as string}\r\n          onClick={onDeleteCart}\r\n          edge=\"end\"\r\n          aria-label=\"comments\"\r\n        >\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </ListItemSecondaryAction>\r\n    </ListItem>\r\n  );\r\n};\r\n","import List from \"@material-ui/core/List\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport React, { useCallback, useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteData, getData, postData } from \"../../api\";\r\nimport { Dispatch, RootState } from \"../../state/store\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport {\r\n  CartDisplay,\r\n  CartInfo,\r\n  OrderCheckout,\r\n  OrderDetailInfo,\r\n  OrderInfo,\r\n  ProductInfo,\r\n} from \"../../types/task\";\r\nimport { Cart } from \"../Cart/Cart\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: \"100%\",\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n  })\r\n);\r\n\r\nexport const CartList = () => {\r\n  const classes = useStyles();\r\n\r\n  const cartList = useSelector((state: RootState) => state.cart) as CartInfo[];\r\n  const productList = useSelector(\r\n    (state: RootState) => state.product\r\n  ) as ProductInfo[];\r\n\r\n  const cartListAfter: CartDisplay[] = [];\r\n\r\n  cartList.forEach((cart) => {\r\n    productList.forEach((product) => {\r\n      if (cart.product_id === product.id) {\r\n        cartListAfter.push({ cartInfo: cart, product });\r\n      }\r\n    });\r\n  });\r\n\r\n  const dispatch = useDispatch<Dispatch>();\r\n\r\n  const onDeleteCart = (event: React.MouseEvent<HTMLElement>) => {\r\n    const {\r\n      currentTarget: { id },\r\n    } = event;\r\n\r\n    const session = JSON.parse(sessionStorage.getItem(\"userName\") as string);\r\n    const { userId } = session;\r\n\r\n    deleteData(`${process.env.REACT_APP_SERVER_PORT}/cart/delete/${id}`).then((result) => {\r\n      const { affectedRows } = result;\r\n      postData(`${process.env.REACT_APP_SERVER_PORT}/cart`, { idLogin: userId }).then(\r\n        (result) => {\r\n          dispatch.cart.fetchCartList(result);\r\n        }\r\n      );\r\n      affectedRows > 0\r\n        ? alert(\"Đã xóa sản phẩm khỏi giỏ hàng\")\r\n        : alert(\"Xóa không thành công\");\r\n    });\r\n  };\r\n\r\n  const element = document.getElementsByClassName(\r\n    \"price\"\r\n  ) as unknown as HTMLElement[];\r\n\r\n  const elementCheckbox = document.getElementsByTagName(\r\n    \"input\"\r\n  ) as unknown as HTMLInputElement[];\r\n\r\n  const elementQuantity = document.getElementsByClassName(\r\n    \"quantity\"\r\n  ) as unknown as HTMLElement[];\r\n\r\n  const elementProductId = document.getElementsByClassName(\r\n    \"productId\"\r\n  ) as unknown as HTMLElement[];\r\n\r\n  let total: number = 0;\r\n  let cartOrderDetail: OrderDetailInfo[] = [];\r\n\r\n  const orderId = uuidv4();\r\n\r\n  if (element.length > 0) {\r\n    for (let i = 0; i < element.length; i++) {\r\n      if (elementCheckbox[i + 1].checked === true) {\r\n        total += Number(element[i].innerHTML);\r\n        const quantity = Number(elementQuantity[i].innerHTML);\r\n        const productId = Number(elementProductId[i].innerHTML);\r\n        const cartDetailTmp: OrderDetailInfo = {\r\n          id: 0,\r\n          product_id: productId,\r\n          order_id: orderId,\r\n          quantity: quantity,\r\n        };\r\n        console.log(\"2\");\r\n        cartOrderDetail.push(cartDetailTmp);\r\n      }\r\n    }\r\n  }\r\n\r\n  const tahnToan = () => {\r\n    const { userId } = JSON.parse(sessionStorage.getItem(\"userName\") as string);\r\n    const order: OrderInfo = {\r\n      id: orderId,\r\n      date_payment: \"null\",\r\n      total_price: total,\r\n      user_id: userId,\r\n    };\r\n\r\n    const dataCheckout: OrderCheckout = {\r\n      order,\r\n      orderDetail: cartOrderDetail,\r\n    };\r\n\r\n    postData(`${process.env.REACT_APP_SERVER_PORT}/checkout`, dataCheckout);\r\n\r\n    dispatch.order.setOrderCheckout(dataCheckout);\r\n  };\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      {cartListAfter.map((item) => (\r\n        <Cart\r\n          onDeleteCart={onDeleteCart}\r\n          key={item.cartInfo.id}\r\n          cartDisplay={item}\r\n        />\r\n      ))}\r\n      <h1>total:{total}</h1>\r\n      <Button style={{ background: \"green\" }} onClick={tahnToan}>\r\n        Đặt hàng\r\n      </Button>\r\n    </List>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  alpha,\r\n  makeStyles,\r\n  Theme,\r\n  createStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport {\r\n  ListItem,\r\n  List,\r\n  Divider,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Drawer,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Dispatch, RootState } from \"../../state/store\";\r\nimport { CartInfo, ProductInfo } from \"../../types/task\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    list: {\r\n      width: 250,\r\n    },\r\n    fullList: {\r\n      width: \"auto\",\r\n    },\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      display: \"none\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        display: \"block\",\r\n      },\r\n    },\r\n    search: {\r\n      position: \"relative\",\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n      \"&:hover\": {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n      },\r\n      marginRight: theme.spacing(2),\r\n      marginLeft: 0,\r\n      width: \"100%\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        marginLeft: theme.spacing(3),\r\n        width: \"auto\",\r\n      },\r\n    },\r\n    buttonSearch: {\r\n      color: \"white\",\r\n    },\r\n    searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: \"100%\",\r\n      position: \"absolute\",\r\n      pointerEvents: \"none\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n    },\r\n    inputRoot: {\r\n      color: \"inherit\",\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      transition: theme.transitions.create(\"width\"),\r\n      width: \"100%\",\r\n      [theme.breakpoints.up(\"md\")]: {\r\n        width: \"20ch\",\r\n      },\r\n    },\r\n    sectionDesktop: {\r\n      display: \"none\",\r\n      [theme.breakpoints.up(\"md\")]: {\r\n        display: \"flex\",\r\n      },\r\n    },\r\n    sectionMobile: {\r\n      display: \"flex\",\r\n      [theme.breakpoints.up(\"md\")]: {\r\n        display: \"none\",\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\ntype Anchor = \"left\";\r\n\r\nexport const MenuSideBar = () => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] =\r\n    React.useState<null | HTMLElement>(null);\r\n\r\n  // Toggle menu\r\n  const [state, setState] = React.useState({\r\n    left: false,\r\n  });\r\n\r\n  // Toggle menu\r\n  const toggleDrawer =\r\n    (anchor: Anchor, open: boolean) =>\r\n    (event: React.KeyboardEvent | React.MouseEvent) => {\r\n      if (\r\n        event.type === \"keydown\" &&\r\n        ((event as React.KeyboardEvent).key === \"Tab\" ||\r\n          (event as React.KeyboardEvent).key === \"Shift\")\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      setState({ ...state, [anchor]: open });\r\n    };\r\n\r\n  const list = (anchor: Anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === \"left\",\r\n      })}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n        {[\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"secondary\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n          <Badge badgeContent={11} color=\"secondary\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n\r\n  const dispatch = useDispatch<Dispatch>();\r\n\r\n  const onSearch = async () => {\r\n    await fetch(`http://localhost:5000/product/search?input=${searchInput}`)\r\n      .then((item) => item.json())\r\n      .then((result) => {\r\n        dispatch.product.fetchProductList(result as ProductInfo[]);\r\n      });\r\n  };\r\n\r\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setSearchInput(value);\r\n  };\r\n\r\n  const totalCart = (\r\n    useSelector((state: RootState) => state.cart) as CartInfo[]\r\n  ).length;\r\n\r\n  const userName = JSON.parse(sessionStorage.getItem(\"userName\") as string);\r\n  let url = \"\";\r\n  if (userName) {\r\n    const { image = \"\" } = userName;\r\n    url = image;\r\n  }\r\n\r\n  const onLogout = () => {\r\n    sessionStorage.removeItem(\"userName\");\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <div>\r\n            <IconButton\r\n              onClick={toggleDrawer(\"left\", true)}\r\n              edge=\"start\"\r\n              className={classes.menuButton}\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Drawer\r\n              anchor=\"left\"\r\n              open={state[\"left\"]}\r\n              onClose={toggleDrawer(\"left\", false)}\r\n            >\r\n              {list(\"left\")}\r\n            </Drawer>\r\n          </div>\r\n\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            <a style={{ color: \"white\", textDecoration: \"none\" }} href=\"/\">\r\n              Material-UI\r\n            </a>\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              onChange={onChange}\r\n              name=\"search\"\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n            />\r\n          </div>\r\n          <Button\r\n            onClick={onSearch}\r\n            size=\"medium\"\r\n            className={classes.buttonSearch}\r\n          >\r\n            Search\r\n          </Button>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <a\r\n              href={userName ? \"/cart-list\" : \"/login\"}\r\n              style={{ color: \"white\" }}\r\n            >\r\n              <IconButton\r\n                aria-label=\"show 17 new notifications\"\r\n                color=\"inherit\"\r\n              >\r\n                <Badge\r\n                  badgeContent={userName ? totalCart : 0}\r\n                  color=\"secondary\"\r\n                >\r\n                  <ShoppingCartIcon />\r\n                </Badge>\r\n              </IconButton>\r\n            </a>\r\n\r\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\r\n              <Badge badgeContent={17} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n            <Avatar alt=\"Remy Sharp\" src={url} />\r\n            {userName ? (\r\n              <Button style={{ color: \"white\" }} onClick={onLogout}>\r\n                Logout\r\n              </Button>\r\n            ) : (\r\n              <Button style={{ color: \"white\" }} href=\"/login\">\r\n                Login\r\n              </Button>\r\n            )}\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport { ProductInfo } from \"../../types/task\";\r\nimport { dateToString } from \"../../utils/getData\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      background: \"#QE8EDED\",\r\n      border: \"1px solid gray\",\r\n      margin: \"5px\",\r\n      height: \"550px\",\r\n    },\r\n    card: {\r\n      cursor: \"pointer\",\r\n      \"&:hover\": {\r\n        background: \"#D8EBE1\",\r\n      },\r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: \"70%\", // 16:9\r\n      margin: \"10px\",\r\n      borderRadius: \"5px\",\r\n    },\r\n    expand: {\r\n      transform: \"rotate(0deg)\",\r\n      marginLeft: \"auto\",\r\n      transition: theme.transitions.create(\"transform\", {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: \"rotate(180deg)\",\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500],\r\n    },\r\n  })\r\n);\r\n\r\ntype ProductInfoProps = {\r\n  product: ProductInfo;\r\n  onAddToCart: (event: React.MouseEvent<HTMLElement>) => void;\r\n};\r\n\r\nexport const Product = (props: ProductInfoProps): JSX.Element => {\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    product: { id, name, description, createDate, image_link },\r\n    onAddToCart,\r\n  } = props;\r\n\r\n  return (\r\n    <Card className={classNames(classes.root, classes.card)}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n            R\r\n          </Avatar>\r\n        }\r\n        action={\r\n          <IconButton aria-label=\"settings\">\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        }\r\n        title={name}\r\n        subheader=\"September 14, 2016\"\r\n      />\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={image_link}\r\n        title=\"Paella dish\"\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {description}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions style={{ textAlign: \"center\" }}>\r\n        <Button style={{ background: \"gray\" }} color=\"default\">\r\n          View detail\r\n        </Button>\r\n        <Button\r\n          id={id as unknown as string}\r\n          onClick={onAddToCart}\r\n          style={{ background: \"blue\" }}\r\n        >\r\n          Add to cart\r\n        </Button>\r\n        <Button style={{ background: \"green\" }}>Mua ngay</Button>\r\n        {/* <IconButton aria-label=\"add to favorites\">\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"share\">\r\n          <ShareIcon />\r\n        </IconButton> */}\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { Grid, makeStyles, createStyles, Theme } from \"@material-ui/core\";\r\nimport { Product } from \"../Product/Product\";\r\nimport { useState } from \"react\";\r\nimport { ProductInfo } from \"../../types/task\";\r\nimport { isTemplateExpression } from \"typescript\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Dispatch, RootState } from \"../../state/store\";\r\nimport { postData, getData } from \"../../api\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nexport const ProductList = (): JSX.Element => {\r\n  const productList = useSelector((state: RootState) => state.product);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch<Dispatch>();\r\n\r\n  const onAddToCart = (event: React.MouseEvent<HTMLElement>) => {\r\n    const { userId } = JSON.parse(sessionStorage.getItem(\"userName\") as string);\r\n\r\n    const {\r\n      currentTarget: { id },\r\n    } = event;\r\n\r\n    const data = {\r\n      productId: id,\r\n      userId: userId,\r\n    };\r\n\r\n    postData(`${process.env.REACT_APP_SERVER_PORT}/cart/add`, data).then((result) => {\r\n      if (userId) {\r\n        const { affectedRows } = result;\r\n        if (affectedRows > 0) {\r\n          alert(\"Đã thêm sản phẩm vào giỏ hàng \");\r\n        }\r\n        postData(`${process.env.REACT_APP_SERVER_PORT}/cart`, { idLogin: userId }).then(\r\n          (result) => {\r\n            dispatch.cart.fetchCartList(result);\r\n          }\r\n        );\r\n      } else {\r\n        history.push(\"/login\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Grid container>\r\n      {productList &&\r\n        productList.map((item) => {\r\n          return (\r\n            <Grid key={item.id} item sm={3} xs={12}> \r\n              <Product onAddToCart={onAddToCart} product={item} />\r\n            </Grid>\r\n          );\r\n        })}\r\n    </Grid>\r\n  );\r\n};\r\n","import firebase from \"firebase\";\r\nimport \"firebase/firestore\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBAOv_OpEob1jmHeTJVzuibBUOgMHd_2yw\",\r\n  authDomain: \"example-1b332.firebaseapp.com\",\r\n  projectId: \"example-1b332\",\r\n  storageBucket: \"example-1b332.appspot.com\",\r\n  messagingSenderId: \"715215332219\",\r\n  appId: \"1:715215332219:web:8fd13802d86680827193de\",\r\n  measurementId: \"G-DLRHSHX21T\",\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n// export { firestore };\r\nexport default firebase;\r\n","import React, { useState } from \"react\";\r\nimport { Button, FormGroup, TextField } from \"@material-ui/core\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { postData } from \"../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport FacebookLogin from \"react-facebook-login\";\r\nimport GoogleLogin from \"react-google-login\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Dispatch } from \"../../state/store\";\r\n\r\ninterface DataLogin {\r\n  userName: string;\r\n  password: string;\r\n  check: boolean;\r\n}\r\n\r\nconst schema = yup.object().shape({\r\n  userName: yup.string().required(),\r\n  password: yup.string().required(),\r\n});\r\n\r\nexport const Login = () => {\r\n  const history = useHistory();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<DataLogin>({\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const [messageLogin, setMessageLogin] = useState(\"\");\r\n\r\n  const onSubmit = (data: DataLogin) => {\r\n    postData(`${process.env.REACT_APP_SERVER_PORT}/login`, data).then((result) => {\r\n      if (result[0]) {\r\n        const { name, id } = result[0];\r\n        sessionStorage.setItem(\r\n          \"userName\",\r\n          JSON.stringify({ userId: id, userName: name })\r\n        );\r\n        history.push(\"/product\");\r\n      } else {\r\n        setMessageLogin(\"User name or password incorrec\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const errorUserName = errors.userName?.message;\r\n  const errorPasswrod = errors.password?.message;\r\n\r\n  const responseFacebook = async (response: any) => {\r\n    const { id: facebookId, name, picture } = response;\r\n\r\n    await postData(`${process.env.REACT_APP_SERVER_PORT}/login/getUserId`, {\r\n      userId: facebookId,\r\n    }).then(async (result) => {\r\n      if (result.length > 0) {\r\n        const { id: userId } = result[0];\r\n        sessionStorage.setItem(\r\n          \"userName\",\r\n          JSON.stringify({\r\n            userId: userId,\r\n            userName: facebookId,\r\n            image: picture.data.url,\r\n          })\r\n        );\r\n        history.push(\"/product\");\r\n      } else {\r\n        await postData(`${process.env.REACT_APP_SERVER_PORT}/login/register`, {\r\n          userName: facebookId,\r\n        });\r\n\r\n        postData(`${process.env.REACT_APP_SERVER_PORT}/login/getUserId`, {\r\n          userId: facebookId,\r\n        }).then((result) => {\r\n          if (result.length > 0) {\r\n            const { id } = result[0];\r\n            sessionStorage.setItem(\r\n              \"userName\",\r\n              JSON.stringify({\r\n                userId: id,\r\n                userName: name,\r\n                image: picture.data.url,\r\n              })\r\n            );\r\n            history.push(\"/product\");\r\n          }\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit(onSubmit)} method=\"POST\">\r\n        <FormGroup>\r\n          <TextField\r\n            error={errorUserName ? true : false}\r\n            id=\"standard-basic\"\r\n            label=\"User Name\"\r\n            {...register(\"userName\")}\r\n            helperText={errorUserName}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <TextField\r\n            error={errorPasswrod ? true : false}\r\n            id=\"standard-basic\"\r\n            label=\"Password\"\r\n            {...register(\"password\")}\r\n            helperText={errorPasswrod}\r\n          />\r\n        </FormGroup>\r\n        <p style={{ color: \"red\" }}>{messageLogin}</p>\r\n        <FormGroup style={{ marginTop: \"10px\" }}>\r\n          <Button type=\"submit\" style={{ background: \"orange\" }}>\r\n            LOGIN\r\n          </Button>\r\n        </FormGroup>\r\n        <br />\r\n        <h1>LOGIN FACEBOOK</h1>\r\n        <FacebookLogin\r\n          appId=\"886076215620945\"\r\n          fields=\"name,picture\"\r\n          callback={responseFacebook}\r\n        />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import { Button, Grid, useScrollTrigger } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\n// import styled from \"styled-components\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport \"./App.css\";\r\nimport { CartList } from \"./components/CartList/CartList\";\r\nimport { MenuSideBar } from \"./components/MenuSideBar\";\r\nimport { ProductList } from \"./components/ProductList/ProductList\";\r\nimport { TaskDetail } from \"./components/TaskDetail\";\r\nimport { TaskList } from \"./components/TaskList\";\r\nimport firebase from \"./firebase/firebase\";\r\nimport { Dispatch, RootState } from \"./state/store\";\r\nimport { getData, postData } from \"./api\";\r\nimport { CartInfo, ProductInfo, TaskInfo } from \"./types/task\";\r\nimport { Login } from \"./components/Login/Login\";\r\nimport { env } from \"process\";\r\n\r\nfunction App() {\r\n  // const [taskInfoList, setTaskInfoList] = useState<TaskInfo[]>([]);\r\n  // useEffect(() => {\r\n  //   const apiUrl = \"http://localhost:8080/task\";\r\n\r\n  //   fetch(apiUrl)\r\n  //     .then((result) => result.json())\r\n  //     .then((rs) => {\r\n  //       setTaskInfoList(rs as TaskInfo[]);\r\n  //     });\r\n  // }, []);\r\n\r\n  // const dataTmp: TaskInfo[] = [\r\n  //   {\r\n  //     id: \"1\",\r\n  //     status: 1,\r\n  //     name: \"Create save filter\",\r\n  //     description: \"323\",\r\n  //     createDate: \"2021-01-02\",\r\n  //     dueDate: \"2021-01-03\",\r\n  //   },\r\n  //   {\r\n  //     id: \"2\",\r\n  //     status: 2,\r\n  //     name: \"Create test script search filter edit\",\r\n  //     description: \"323\",\r\n  //     createDate: \"2021-01-02\",\r\n  //     dueDate: \"2021-01-03\",\r\n  //   },\r\n  //   {\r\n  //     id: \"3\",\r\n  //     status: 3,\r\n  //     name: \"Update component filter target edit\",\r\n  //     description: \"323\",\r\n  //     createDate: \"2021-01-02\",\r\n  //     dueDate: \"2021-01-03\",\r\n  //   },\r\n  //   {\r\n  //     id: \"4\",\r\n  //     status: 4,\r\n  //     name: \"Create document study spec\",\r\n  //     description: \"Ta\",\r\n  //     createDate: \"2021-01-02\",\r\n  //     dueDate: \"2021-01-03\",\r\n  //   },\r\n  //   {\r\n  //     id: \"5\",\r\n  //     status: 4,\r\n  //     name: \"Create document study spec\",\r\n  //     description: \"Ta\",\r\n  //     createDate: \"2021-01-02\",\r\n  //     dueDate: \"2021-01-03\",\r\n  //   },\r\n  //   {\r\n  //     id: \"6\",\r\n  //     status: 4,\r\n  //     name: \"Create document study spec\",\r\n  //     description: \"Ta\",\r\n  //     createDate: \"2021-01-02\",\r\n  //     dueDate: \"2021-01-03\",\r\n  //   },\r\n  //   {\r\n  //     id: \"7\",\r\n  //     status: 4,\r\n  //     name: \"Create document study spec\",\r\n  //     description: \"Ta\",\r\n  //     createDate: \"2021-01-02\",\r\n  //     dueDate: \"2021-01-03\",\r\n  //   },\r\n  //   {\r\n  //     id: \"8\",\r\n  //     status: 4,\r\n  //     name: \"Create document study spec\",\r\n  //     description: \"Ta\",\r\n  //     createDate: \"2021-01-02\",\r\n  //     dueDate: \"2021-01-03\",\r\n  //   },\r\n  //   {\r\n  //     id: \"9\",\r\n  //     status: 4,\r\n  //     name: \"Create document study spec\",\r\n  //     description: \"Ta\",\r\n  //     createDate: \"2021-01-02\",\r\n  //     dueDate: \"2021-01-03\",\r\n  //   },\r\n  // ];\r\n\r\n  // const deleteTodo = () => {\r\n  //   firebase\r\n  //     .firestore()\r\n  //     .collection(\"tasks\")\r\n  //     .where(\"id\", \"==\", \"1\")\r\n  //     .get()\r\n  //     .then((item) => {\r\n  //       item.docs[0].ref.delete();\r\n  //     });\r\n  //   firebase.database().ref(\"messages\");\r\n  // };\r\n\r\n  // const addToto = () => {\r\n  //   dataTmp.forEach((item) => {\r\n  //     const { createDate, description, dueDate, id, name, status } = item;\r\n  //     firebase.firestore().collection(\"tasks\").add({\r\n  //       id,\r\n  //       status,\r\n  //       name,\r\n  //       description,\r\n  //       createDate,\r\n  //       dueDate,\r\n  //       closingDate: \"\",\r\n  //     });\r\n  //   });\r\n  // };\r\n\r\n  // const dataTmp = [\r\n  //   { value: \"doing\", label: \"Doing\" },\r\n  //   { value: \"done\", label: \"Done\" },\r\n  //   { value: \"closed\", label: \"Close\" },\r\n  //   { value: \"open\", label: \"open\" },\r\n  // ];\r\n\r\n  // const addToto = () => {\r\n  //   dataTmp.forEach((item) => {\r\n  //     const { label, value } = item;\r\n  //     firebase.firestore().collection(\"status\").add({\r\n  //       value,\r\n  //       label,\r\n  //     });\r\n  //   });\r\n  // };\r\n\r\n  const [taskList2, setTaskList2] = useState<TaskInfo[]>([]);\r\n  // const taskList = useSelector((state: RootState) => state.task);\r\n\r\n  const taskDeleteId = useSelector(\r\n    (state: RootState) => state.taskDetail.taskId\r\n  ) as string;\r\n\r\n  const [deleteId, setDeleteId] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setDeleteId(taskDeleteId);\r\n    let tmp: TaskInfo[] = [];\r\n    firebase\r\n      .firestore()\r\n      .collection(\"tasks\")\r\n      .get()\r\n      .then((item) => {\r\n        // const hehe = item.docs as unknown as TaskInfo[];\r\n        item.docs.forEach((task) => {\r\n          tmp.push(task.data() as unknown as TaskInfo);\r\n        });\r\n        setTaskList2(tmp);\r\n      });\r\n  }, [deleteId, taskDeleteId]);\r\n\r\n  const dispatch = useDispatch<Dispatch>();\r\n\r\n  useEffect(() => {\r\n    if (taskList2) {\r\n      dispatch.task.fetchTaskList(taskList2);\r\n    }\r\n  }, [dispatch, taskList2, deleteId]);\r\n\r\n  console.log(\"3232: \", process.env.REACT_APP_SERVER_PORT);\r\n\r\n  useEffect(() => {\r\n    getData(`${process.env.REACT_APP_SERVER_PORT2}/product`).then((result) => {\r\n      dispatch.product.fetchProductList(result as ProductInfo[]);\r\n    });\r\n  }, [dispatch.product]);\r\n\r\n  const session = JSON.parse(sessionStorage.getItem(\"userName\") as string);\r\n\r\n  console.log(\"session: \", session);\r\n\r\n  let idLogin = \"\";\r\n  if (session) {\r\n    const { userId = \"\" } = session;\r\n    idLogin = userId;\r\n  }\r\n\r\n  console.log(\"userId\", idLogin);\r\n\r\n  useEffect(() => {\r\n    if (idLogin) {\r\n      postData(`${process.env.REACT_APP_SERVER_PORT}/cart`, { idLogin }).then(\r\n        (result) => {\r\n          dispatch.cart.fetchCartList(result);\r\n        }\r\n      );\r\n    }\r\n  }, [dispatch.cart, idLogin]);\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/product\">\r\n          <>\r\n            <Grid\r\n              item\r\n              style={{\r\n                position: \"fixed\",\r\n                width: \"100%\",\r\n                overflow: \"auto\",\r\n                top: 0,\r\n                zIndex: 1,\r\n              }}\r\n            >\r\n              <MenuSideBar />\r\n            </Grid>\r\n            <Grid item style={{ margin: \"0 auto\", marginTop: \"80px\" }} sm={10}>\r\n              <ProductList />\r\n            </Grid>\r\n          </>\r\n        </Route>\r\n        <Route path=\"/cart-list\">\r\n          <MenuSideBar />\r\n          <Grid item style={{ margin: \"0 auto\", marginTop: \"80px\" }} sm={10}>\r\n            <CartList />\r\n          </Grid>\r\n        </Route>\r\n        <Route path=\"/login\">\r\n          <MenuSideBar />\r\n          <Grid item style={{ margin: \"0 auto\", marginTop: \"80px\" }} sm={4}>\r\n            <Login />\r\n          </Grid>\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { Models } from \"@rematch/core\";\r\nimport { count } from \"./count\";\r\nimport { task } from \"./task\";\r\nimport { taskDetail } from \"./task-detail\";\r\nimport { product } from \"./product\";\r\nimport { cart } from \"./cart\";\r\nimport { order } from \"./order\";\r\n\r\nexport interface RootModel extends Models<RootModel> {\r\n  count: typeof count;\r\n  task: typeof task;\r\n  taskDetail: typeof taskDetail;\r\n  product: typeof product;\r\n  cart: typeof cart;\r\n  order: typeof order;\r\n}\r\n\r\nexport const models: RootModel = {\r\n  count,\r\n  task,\r\n  taskDetail,\r\n  product,\r\n  cart,\r\n  order,\r\n};\r\n","import { createModel } from '@rematch/core'\r\nimport { RootModel } from './models'\r\n\r\ntype Names = 'custom'\r\ntype ComplexCount = {\r\n    count: number;\r\n    multiplierName: Names;\r\n}\r\n\r\nexport const count = createModel<RootModel>()({\r\n    state: {\r\n        count: 0,\r\n        multiplierName: 'custom'\r\n    } as ComplexCount, // <-\r\n    reducers: {\r\n        increment(state, payload: number) {\r\n            return {\r\n                count: state.count + payload,\r\n                multiplierName: \"custom\"\r\n            }\r\n        },\r\n    },\r\n    effects: (dispatch) => ({\r\n        async incrementAsync(payload: number, state) {\r\n            dispatch.count.increment(payload)\r\n        },\r\n    }),\r\n});","import { createModel } from \"@rematch/core\";\r\nimport { RootModel } from \"./models\";\r\nimport { TaskInfo } from \"../types/task\";\r\n\r\nexport const task = createModel<RootModel>()({\r\n  state: [{ id: \"\", name: \"\", description: \"\" }] as TaskInfo[], // <-\r\n  reducers: {\r\n    fetchTaskList(state, payload: TaskInfo[]) {\r\n      return payload;\r\n    },\r\n  },\r\n  effects: (dispatch) => ({\r\n    async setTaskAsync(payload: TaskInfo[]) {\r\n      dispatch.task.fetchTaskList(payload);\r\n    },\r\n  }),\r\n});\r\n","import { createModel } from \"@rematch/core\";\r\nimport { RootModel } from \"./models\";\r\n\r\ntype TaskDetail = {\r\n  taskId?: string;\r\n  taskDeleteId?: string;\r\n};\r\n\r\nexport const taskDetail = createModel<RootModel>()({\r\n  state: { taskId: \"\", taskDeleteId: \"\" } as TaskDetail,\r\n  reducers: {\r\n    setTaskDetail(state, payload: TaskDetail) {\r\n      return {\r\n        ...state,\r\n        taskId: payload.taskId,\r\n        taskDeleteId: payload.taskDeleteId,\r\n      };\r\n    },\r\n  },\r\n  effects: (dispatch) => ({\r\n    async setTaskDetailAsync(payload: TaskDetail) {\r\n      dispatch.taskDetail.setTaskDetail(payload);\r\n    },\r\n  }),\r\n});\r\n","import { createModel } from \"@rematch/core\";\r\nimport { RootModel } from \"./models\";\r\nimport { ProductInfo } from \"../types/task\";\r\n\r\nexport const product = createModel<RootModel>()({\r\n  state: [] as ProductInfo[],\r\n  reducers: {\r\n    fetchProductList(state, payload: ProductInfo[]) {\r\n      return payload;\r\n    },\r\n  },\r\n  effects: (dispatch) => ({\r\n    async setProductAsync(payload: ProductInfo[]) {\r\n      dispatch.product.fetchProductList(payload);\r\n    },\r\n  }),\r\n});\r\n","import { createModel } from \"@rematch/core\";\r\nimport { RootModel } from \"./models\";\r\nimport { CartInfo } from \"../types/task\";\r\n\r\nexport const cart = createModel<RootModel>()({\r\n  state: [] as CartInfo[],\r\n  reducers: {\r\n    fetchCartList(state, payload: CartInfo[]) {\r\n      return payload;\r\n    },\r\n  },\r\n  effects: (dispatch) => ({\r\n    async setCartAsync(payload: CartInfo[]) {\r\n      dispatch.cart.fetchCartList(payload);\r\n    },\r\n  }),\r\n});\r\n","import { createModel } from \"@rematch/core\";\r\nimport { RootModel } from \"./models\";\r\nimport { OrderCheckout } from \"../types/task\";\r\n\r\nexport const order = createModel<RootModel>()({\r\n  state: {} as OrderCheckout,\r\n  reducers: {\r\n    setOrderCheckout(state, payload: OrderCheckout) {\r\n      return payload;\r\n    },\r\n  },\r\n  effects: (dispatch) => ({\r\n    async setOrderCheckoutAsync(payload: OrderCheckout) {\r\n      dispatch.or.setOrderCheckoutF(payload);\r\n    },\r\n  }),\r\n});\r\n","import { init, RematchDispatch, RematchRootState } from '@rematch/core'\r\nimport { models, RootModel } from './models'\r\n\r\n/** Plugins **/\r\nimport updatedPlugin, { ExtraModelsFromUpdated } from '@rematch/updated'\r\nimport loadingPlugin, { ExtraModelsFromLoading } from '@rematch/loading'\r\n\r\ntype FullModel = ExtraModelsFromLoading<RootModel> & ExtraModelsFromUpdated<RootModel>\r\n\r\nexport const store = init<RootModel, FullModel>({\r\n    models,\r\n    plugins: [\r\n        loadingPlugin(),\r\n        updatedPlugin(),\r\n    ]\r\n})\r\n\r\nexport type Store = typeof store\r\nexport type Dispatch = RematchDispatch<RootModel>\r\nexport type RootState = RematchRootState<RootModel>","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux'\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { store } from \"./state/store\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}